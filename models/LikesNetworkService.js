// Generated by CoffeeScript 1.7.1

/*
 *LikesNetworkService#
Сервис определения лайков на фотках у друзей друзей
Сканируем Сетку друзей
 */
'use strict';
MainModule.service('LikesNetwork', function($timeout, $q, RestModel, Loader, Notification) {
  return {
    network: [],
    params: null,
    getFriendsNetworkList: function(count, array, result) {
      var localUsers;
      if (result == null) {
        result = null;
      }
      localUsers = [];
      if (count < 25) {
        return $timeout((function(_this) {
          return function() {
            return RestModel.getNetworkFriendsExecute(array, _this.params).then(function(response) {
              _this.checkSameUsers(response.data.response);
              _this.network = _this.array_unique(_this.network);
              return _this.network;
            }, function(error) {
              return Notification.error('Произошла ошибка, обновите страницу ' + error.error_msg);
            });
          };
        })(this), 350);
      } else {
        localUsers = array.splice(0, 25);
        return $timeout((function(_this) {
          return function() {
            return RestModel.getNetworkFriendsExecute(localUsers, _this.params).then(function(response) {
              count = count - 25;
              _this.checkSameUsers(response.data.response);
              return _this.getFriendsNetworkList(count, array, result);
            }, function(error) {
              return Notification.error('Произошла ошибка, обновите страницу ' + error.error_msg);
            });
          };
        })(this), 350);
      }
    },
    checkSameUsers: function(users) {
      return angular.forEach(users, (function(_this) {
        return function(user) {
          return _this.network = _this.network.concat(user.items);
        };
      })(this));
    },
    array_unique: function(inArr) {
      var i, outArr, uniHash;
      uniHash = {};
      outArr = [];
      i = inArr.length;
      while (i--) {
        uniHash[inArr[i].id] = inArr[i];
      }
      for (i in uniHash) {
        outArr.push(uniHash[i]);
      }
      return outArr;
    }
  };
});

//# sourceMappingURL=LikesNetworkService.map
